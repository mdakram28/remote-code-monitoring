{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"#####","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":6.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"#####","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":6.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":10.87,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":10.87,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"#####","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  a = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  b = malloc(rows * sizeof(int *));"},{"count":"#####","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":13.04,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":21.74,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":21.74,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":28.26,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"#####","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":28.26,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":34.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":34.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"2","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"2","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"2","code":"    usleep(20000);"},{"count":"1","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"7","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"7","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"7","code":"    usleep(20000);"},{"count":"6","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"12","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"12","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"12","code":"    usleep(20000);"},{"count":"11","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"17","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"17","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"17","code":"    usleep(20000);"},{"count":"16","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"23","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"22","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"22","code":"    usleep(20000);"},{"count":"21","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"28","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"27","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"27","code":"    usleep(20000);"},{"count":"26","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"33","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"32","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"32","code":"    usleep(20000);"},{"count":"31","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"38","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"37","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"37","code":"    usleep(20000);"},{"count":"36","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"44","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"42","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"42","code":"    usleep(20000);"},{"count":"41","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"49","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"47","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"47","code":"    usleep(20000);"},{"count":"46","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"54","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"52","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"52","code":"    usleep(20000);"},{"count":"51","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"59","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"57","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"57","code":"    usleep(20000);"},{"count":"56","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"65","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"62","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"62","code":"    usleep(20000);"},{"count":"61","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"70","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"67","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"67","code":"    usleep(20000);"},{"count":"66","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"75","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"72","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"72","code":"    usleep(20000);"},{"count":"71","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"80","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"77","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"77","code":"    usleep(20000);"},{"count":"76","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"86","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"82","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"82","code":"    usleep(20000);"},{"count":"81","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"91","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"87","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"87","code":"    usleep(20000);"},{"count":"86","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"96","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"92","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"92","code":"    usleep(20000);"},{"count":"91","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"101","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"97","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"97","code":"    usleep(20000);"},{"count":"96","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"107","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"102","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"102","code":"    usleep(20000);"},{"count":"101","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"112","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"107","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"107","code":"    usleep(20000);"},{"count":"106","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"117","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"112","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"112","code":"    usleep(20000);"},{"count":"111","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"122","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"117","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"117","code":"    usleep(20000);"},{"count":"116","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"128","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"122","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"122","code":"    usleep(20000);"},{"count":"121","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"133","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"127","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"127","code":"    usleep(20000);"},{"count":"126","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"138","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"132","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"132","code":"    usleep(20000);"},{"count":"131","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"143","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"137","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"137","code":"    usleep(20000);"},{"count":"136","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"149","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"142","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"142","code":"    usleep(20000);"},{"count":"141","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"154","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"147","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"147","code":"    usleep(20000);"},{"count":"146","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"159","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"152","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"152","code":"    usleep(20000);"},{"count":"151","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"164","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"157","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"157","code":"    usleep(20000);"},{"count":"156","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"170","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"162","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"162","code":"    usleep(20000);"},{"count":"161","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"175","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"167","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"167","code":"    usleep(20000);"},{"count":"166","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"180","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"172","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"172","code":"    usleep(20000);"},{"count":"171","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"185","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"177","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"177","code":"    usleep(20000);"},{"count":"176","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"191","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"182","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"182","code":"    usleep(20000);"},{"count":"181","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"196","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"187","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"187","code":"    usleep(20000);"},{"count":"186","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"201","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"192","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"192","code":"    usleep(20000);"},{"count":"191","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"206","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"197","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"197","code":"    usleep(20000);"},{"count":"196","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"212","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"202","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"202","code":"    usleep(20000);"},{"count":"201","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"217","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"207","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"207","code":"    usleep(20000);"},{"count":"206","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"222","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"212","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"212","code":"    usleep(20000);"},{"count":"211","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"227","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"217","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"217","code":"    usleep(20000);"},{"count":"216","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"233","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"222","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"222","code":"    usleep(20000);"},{"count":"221","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"238","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"227","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"227","code":"    usleep(20000);"},{"count":"226","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"243","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"232","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"232","code":"    usleep(20000);"},{"count":"231","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"248","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"237","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"237","code":"    usleep(20000);"},{"count":"236","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"254","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"242","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"242","code":"    usleep(20000);"},{"count":"241","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"259","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"247","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"247","code":"    usleep(20000);"},{"count":"246","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"264","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"252","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"252","code":"    usleep(20000);"},{"count":"251","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"269","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"257","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"257","code":"    usleep(20000);"},{"count":"256","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"275","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"262","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"262","code":"    usleep(20000);"},{"count":"261","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"280","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"267","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"267","code":"    usleep(20000);"},{"count":"266","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"285","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"272","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"272","code":"    usleep(20000);"},{"count":"271","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"290","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"277","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"277","code":"    usleep(20000);"},{"count":"276","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"296","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"282","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"282","code":"    usleep(20000);"},{"count":"281","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"301","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"287","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"287","code":"    usleep(20000);"},{"count":"286","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"306","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"292","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"292","code":"    usleep(20000);"},{"count":"291","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"311","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"297","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"297","code":"    usleep(20000);"},{"count":"296","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"317","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"302","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"302","code":"    usleep(20000);"},{"count":"301","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"322","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"307","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"307","code":"    usleep(20000);"},{"count":"306","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"327","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"312","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"312","code":"    usleep(20000);"},{"count":"311","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"332","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"317","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"317","code":"    usleep(20000);"},{"count":"316","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"338","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"322","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"322","code":"    usleep(20000);"},{"count":"321","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"343","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"327","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"327","code":"    usleep(20000);"},{"count":"326","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"348","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"332","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"332","code":"    usleep(20000);"},{"count":"331","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"353","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"337","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"337","code":"    usleep(20000);"},{"count":"336","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"359","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"342","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"342","code":"    usleep(20000);"},{"count":"341","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"364","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"347","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"347","code":"    usleep(20000);"},{"count":"346","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"369","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"352","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"352","code":"    usleep(20000);"},{"count":"351","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"374","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"357","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"357","code":"    usleep(20000);"},{"count":"356","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"380","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"362","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"362","code":"    usleep(20000);"},{"count":"361","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"385","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"367","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"367","code":"    usleep(20000);"},{"count":"366","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"390","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"372","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"372","code":"    usleep(20000);"},{"count":"371","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"395","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"377","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"377","code":"    usleep(20000);"},{"count":"376","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"401","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"382","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"382","code":"    usleep(20000);"},{"count":"381","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"406","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"387","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"387","code":"    usleep(20000);"},{"count":"386","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"411","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"392","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"392","code":"    usleep(20000);"},{"count":"391","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"416","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"397","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"397","code":"    usleep(20000);"},{"count":"396","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"#####","code":"    usleep(20000);"},{"count":"#####","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":45.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"3","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"3","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"3","code":"    usleep(20000);"},{"count":"2","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"8","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"8","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"8","code":"    usleep(20000);"},{"count":"7","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"13","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"13","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"13","code":"    usleep(20000);"},{"count":"12","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"18","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"18","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"18","code":"    usleep(20000);"},{"count":"17","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"24","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"23","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"23","code":"    usleep(20000);"},{"count":"22","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"29","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"28","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"28","code":"    usleep(20000);"},{"count":"27","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"34","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"33","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"33","code":"    usleep(20000);"},{"count":"32","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"39","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"38","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"38","code":"    usleep(20000);"},{"count":"37","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"45","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"43","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"43","code":"    usleep(20000);"},{"count":"42","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"50","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"48","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"48","code":"    usleep(20000);"},{"count":"47","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"55","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"53","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"53","code":"    usleep(20000);"},{"count":"52","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"60","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"58","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"58","code":"    usleep(20000);"},{"count":"57","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"66","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"63","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"63","code":"    usleep(20000);"},{"count":"62","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"71","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"68","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"68","code":"    usleep(20000);"},{"count":"67","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"76","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"73","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"73","code":"    usleep(20000);"},{"count":"72","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"81","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"78","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"78","code":"    usleep(20000);"},{"count":"77","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"87","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"83","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"83","code":"    usleep(20000);"},{"count":"82","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"92","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"88","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"88","code":"    usleep(20000);"},{"count":"87","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"97","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"93","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"93","code":"    usleep(20000);"},{"count":"92","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"102","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"98","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"98","code":"    usleep(20000);"},{"count":"97","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"108","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"103","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"103","code":"    usleep(20000);"},{"count":"102","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"113","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"108","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"108","code":"    usleep(20000);"},{"count":"107","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"118","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"113","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"113","code":"    usleep(20000);"},{"count":"112","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"123","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"118","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"118","code":"    usleep(20000);"},{"count":"117","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"129","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"123","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"123","code":"    usleep(20000);"},{"count":"122","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"134","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"128","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"128","code":"    usleep(20000);"},{"count":"127","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"139","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"133","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"133","code":"    usleep(20000);"},{"count":"132","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"144","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"138","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"138","code":"    usleep(20000);"},{"count":"137","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"150","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"143","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"143","code":"    usleep(20000);"},{"count":"142","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"155","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"148","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"148","code":"    usleep(20000);"},{"count":"147","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"160","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"153","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"153","code":"    usleep(20000);"},{"count":"152","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"165","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"158","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"158","code":"    usleep(20000);"},{"count":"157","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"171","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"163","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"163","code":"    usleep(20000);"},{"count":"162","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"176","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"168","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"168","code":"    usleep(20000);"},{"count":"167","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"181","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"173","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"173","code":"    usleep(20000);"},{"count":"172","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"186","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"178","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"178","code":"    usleep(20000);"},{"count":"177","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"192","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"183","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"183","code":"    usleep(20000);"},{"count":"182","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"197","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"188","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"188","code":"    usleep(20000);"},{"count":"187","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"202","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"193","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"193","code":"    usleep(20000);"},{"count":"192","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"207","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"198","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"198","code":"    usleep(20000);"},{"count":"197","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"213","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"203","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"203","code":"    usleep(20000);"},{"count":"202","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"218","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"208","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"208","code":"    usleep(20000);"},{"count":"207","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"223","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"213","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"213","code":"    usleep(20000);"},{"count":"212","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"228","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"218","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"218","code":"    usleep(20000);"},{"count":"217","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"234","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"223","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"223","code":"    usleep(20000);"},{"count":"222","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"239","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"228","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"228","code":"    usleep(20000);"},{"count":"227","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"244","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"233","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"233","code":"    usleep(20000);"},{"count":"232","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"249","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"238","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"238","code":"    usleep(20000);"},{"count":"237","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"255","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"243","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"243","code":"    usleep(20000);"},{"count":"242","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"260","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"248","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"248","code":"    usleep(20000);"},{"count":"247","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"265","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"253","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"253","code":"    usleep(20000);"},{"count":"252","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"270","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"258","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"258","code":"    usleep(20000);"},{"count":"257","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"276","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"263","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"263","code":"    usleep(20000);"},{"count":"262","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"281","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"268","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"268","code":"    usleep(20000);"},{"count":"267","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"286","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"273","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"273","code":"    usleep(20000);"},{"count":"272","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"291","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"278","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"278","code":"    usleep(20000);"},{"count":"277","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"297","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"283","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"283","code":"    usleep(20000);"},{"count":"282","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"303","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"289","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"289","code":"    usleep(20000);"},{"count":"288","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"308","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"294","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"294","code":"    usleep(20000);"},{"count":"293","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"313","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"299","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"299","code":"    usleep(20000);"},{"count":"298","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"319","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"304","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"304","code":"    usleep(20000);"},{"count":"303","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"324","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"309","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"309","code":"    usleep(20000);"},{"count":"308","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"329","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"314","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"314","code":"    usleep(20000);"},{"count":"313","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"334","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"319","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"319","code":"    usleep(20000);"},{"count":"318","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"340","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"324","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"324","code":"    usleep(20000);"},{"count":"323","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"345","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"329","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"329","code":"    usleep(20000);"},{"count":"328","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"350","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"334","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"334","code":"    usleep(20000);"},{"count":"333","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"355","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"339","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"339","code":"    usleep(20000);"},{"count":"338","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"361","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"344","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"344","code":"    usleep(20000);"},{"count":"343","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"366","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"349","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"349","code":"    usleep(20000);"},{"count":"348","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"371","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"354","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"354","code":"    usleep(20000);"},{"count":"353","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"376","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"359","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"359","code":"    usleep(20000);"},{"count":"358","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"382","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"364","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"364","code":"    usleep(20000);"},{"count":"363","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"387","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"369","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"369","code":"    usleep(20000);"},{"count":"368","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"392","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"374","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"374","code":"    usleep(20000);"},{"count":"373","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"397","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"379","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"379","code":"    usleep(20000);"},{"count":"378","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"403","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"384","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"384","code":"    usleep(20000);"},{"count":"383","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"408","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"389","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"389","code":"    usleep(20000);"},{"count":"388","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"413","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"394","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"394","code":"    usleep(20000);"},{"count":"393","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"418","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"398","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":56.52,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":58.7,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"#####","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"#####","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"#####","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"#####","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":58.7,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":73.91,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"#####","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"#####","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"#####","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":73.91,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"21","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"20","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"1","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":82.61,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"21","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"20","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"1","code":"   usleep(200000);"},{"count":"#####","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":82.61,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"42","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"40","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"2","code":"   usleep(200000);"},{"count":"1","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"2","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"42","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"40","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"2","code":"   usleep(200000);"},{"count":"1","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"63","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"60","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"3","code":"   usleep(200000);"},{"count":"2","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"3","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"63","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"60","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"3","code":"   usleep(200000);"},{"count":"2","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"84","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"80","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"4","code":"   usleep(200000);"},{"count":"3","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"4","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"84","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"80","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"4","code":"   usleep(200000);"},{"count":"3","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"105","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"100","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"5","code":"   usleep(200000);"},{"count":"4","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"5","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"105","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"100","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"5","code":"   usleep(200000);"},{"count":"4","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"126","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"120","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"6","code":"   usleep(200000);"},{"count":"5","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"6","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"126","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"120","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"6","code":"   usleep(200000);"},{"count":"5","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"147","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"140","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"7","code":"   usleep(200000);"},{"count":"6","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"7","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"147","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"140","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"7","code":"   usleep(200000);"},{"count":"6","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"168","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"160","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"8","code":"   usleep(200000);"},{"count":"7","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"8","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"168","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"160","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"8","code":"   usleep(200000);"},{"count":"7","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"189","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"180","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"9","code":"   usleep(200000);"},{"count":"8","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"9","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"189","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"180","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"9","code":"   usleep(200000);"},{"count":"8","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"210","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"200","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"10","code":"   usleep(200000);"},{"count":"9","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"10","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"210","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"200","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"10","code":"   usleep(200000);"},{"count":"9","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"231","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"220","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"11","code":"   usleep(200000);"},{"count":"10","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"11","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"231","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"220","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"11","code":"   usleep(200000);"},{"count":"10","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"252","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"240","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"12","code":"   usleep(200000);"},{"count":"11","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"12","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"252","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"240","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"12","code":"   usleep(200000);"},{"count":"11","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"273","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"260","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"13","code":"   usleep(200000);"},{"count":"12","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"13","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"273","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"260","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"13","code":"   usleep(200000);"},{"count":"12","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"294","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"280","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"14","code":"   usleep(200000);"},{"count":"13","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"14","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"294","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"280","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"14","code":"   usleep(200000);"},{"count":"13","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"315","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"300","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"15","code":"   usleep(200000);"},{"count":"14","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"15","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"315","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"300","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"15","code":"   usleep(200000);"},{"count":"14","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"336","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"320","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"16","code":"   usleep(200000);"},{"count":"15","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"16","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"336","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"320","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"16","code":"   usleep(200000);"},{"count":"15","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"357","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"340","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"17","code":"   usleep(200000);"},{"count":"16","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"17","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"357","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"340","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"17","code":"   usleep(200000);"},{"count":"16","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"378","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"360","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"18","code":"   usleep(200000);"},{"count":"17","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"18","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"378","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"360","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"18","code":"   usleep(200000);"},{"count":"17","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"399","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"380","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"19","code":"   usleep(200000);"},{"count":"18","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"19","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"399","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"380","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"19","code":"   usleep(200000);"},{"count":"18","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"19","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"20","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"19","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":84.78,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":86.96,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  free(a);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":86.96,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":91.3,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  free(b);"},{"count":"#####","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":91.3,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":95.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"2","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"#####","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":95.65,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"1","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
{"lines":[{"count":"-","code":"#include <stdio.h>"},{"count":"-","code":"#include <stdlib.h>"},{"count":"-","code":"#include \"logger.h\""},{"count":"-","code":""},{"count":"1","code":"void add(int **a, int **b, int r, int c)"},{"count":"-","code":"{"},{"count":"-","code":" int i, j;"},{"count":"-","code":""},{"count":"21","code":" for (i = 0; i < r; i++)"},{"count":"-","code":" {"},{"count":"420","code":"  for (j = 0; j < c; j++)"},{"count":"-","code":"  {"},{"count":"400","code":"   a[i][j] = a[i][j] + b[i][j];"},{"count":"-","code":"  }"},{"count":"-","code":" }"},{"count":"1","code":"}"},{"count":"-","code":""},{"count":"1","code":"int main()"},{"count":"-","code":"{"},{"count":"-","code":""},{"count":"1","code":" int n = 100, rows, cols, i, j, **a, **b;"},{"count":"1","code":" usleep(200000);"},{"count":"3","code":" while (n != 0)"},{"count":"-","code":" {"},{"count":"2","code":"  usleep(200000);"},{"count":"2","code":"  scanf(\"%d\", &rows);"},{"count":"1","code":"  scanf(\"%d\", &cols);"},{"count":"-","code":"  if(0)"},{"count":"-","code":"  {"},{"count":"-","code":"   printf(\"fkhdbf\");"},{"count":"-","code":"  }"},{"count":"1","code":"  a = malloc(rows * sizeof(int *));"},{"count":"1","code":"  b = malloc(rows * sizeof(int *));"},{"count":"1","code":"  usleep(200000);"},{"count":"-","code":"  // for each row allocate cols int"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"20","code":"   a[i] = malloc(cols * sizeof(int));"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"20","code":"   b[i] = malloc(cols * sizeof(int));"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"419","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"399","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"399","code":"    usleep(20000);"},{"count":"399","code":"    a[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    int num = (rand() %"},{"count":"-","code":"         (9999 - 1 + 1)) +"},{"count":"-","code":"        1;"},{"count":"400","code":"    usleep(20000);"},{"count":"400","code":"    b[i][j] = num;"},{"count":"-","code":"   }"},{"count":"-","code":"  }"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  add(a, b, rows, cols);"},{"count":"-","code":""},{"count":"1","code":"  usleep(200000);"},{"count":"21","code":"  for (i = 0; i < rows; i++)"},{"count":"-","code":"  {"},{"count":"420","code":"   for (j = 0; j < cols; j++)"},{"count":"-","code":"   {"},{"count":"400","code":"    printf(\"%d \", a[i][j]);"},{"count":"-","code":"   }"},{"count":"20","code":"   usleep(200000);"},{"count":"20","code":"   printf(\"\\n\");"},{"count":"-","code":"  }"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(a);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  free(b);"},{"count":"1","code":"  usleep(200000);"},{"count":"1","code":"  n--;"},{"count":"-","code":" }"},{"count":"-","code":""},{"count":"#####","code":" return 0;"},{"count":"-","code":"}"}],"source":"code.c","graph":"code.gcno","data":"code.gcda","runs":"1","programs":"1","memory":83396,"progress":{"code.c":{"percent":97.83,"total":46}},"runId":"code.c-1537369298648-12921","startTime":"1537369298648","sourceDir":"/media/mdakram28/Data/projects/hda/hda-server/example/sources"}
